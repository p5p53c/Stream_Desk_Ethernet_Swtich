diff --cc ife-dlpi.cc
index 130679d,f445cf6..0000000
--- a/ife-dlpi.cc
+++ b/ife-dlpi.cc
@@@ -293,17 -293,18 +293,14 @@@ if_list_ips(struct interface *ifs
    if(getifaddrs(&ifap)) return 0;
   
    for(ifa = ifap; ifa; ifa = ifa->ifa_next) {
-     struct ifreq ifr;
-     memset(&ifr, 0, sizeof(ifr));
 -    struct lifreq todo;
      if(ifa->ifa_addr->sa_family == AF_INET6) {
-       if((ifa->ifa_flags & IFF_UP)) {
+       if(state == ETH_DOWN_STATE || (ifa->ifa_flags & IFF_UP)) {
          ifs[count].family = AF_INET6;
          memcpy(&ifs[count].ip6addr, &(((struct sockaddr_in6 *)ifa->ifa_addr)->sin6_addr),
    	           sizeof(struct in6_addr));
          memcpy(&ifs[count].netmask6, &(((struct sockaddr_in6 *)ifa->ifa_netmask)->sin6_addr),
    	           sizeof(struct in6_addr));
          strncpy(ifs[count].ifname, ifa->ifa_name, IFNAMSIZ);
-         strncpy(ifr.ifr_name, ifa->ifa_name, IFNAMSIZ);
 -        memcpy(&todo.lifr_name, ifa->ifa_name, IFNAMSIZ);
 -        memcpy(&todo.lifr_addr, &((struct sockaddr_in6 *)&ifa->ifa_addr)->sin6_addr,
 -               sizeof(struct in6_addr));
          memset(ifs[count].mac, 0, sizeof(ifs[count].mac));
          if_get_mac_address(ifs[count].ifname, (char *)ifs[count].mac);
          count++;
@@@ -359,8 -359,8 +355,9 @@@ if_down(struct interface *areq) 
      ((struct sockaddr_in6 *)&todo.lifr_addr)->sin6_family = AF_INET6;
      memcpy(&((struct sockaddr_in6 *)&todo.lifr_addr)->sin6_addr, &areq->ip6addr,
  	   sizeof(struct in6_addr));
-     if(state == ETH_DOWN_STATE) { /* Solaris leave preplumbed option */
++#if 0
+     if(isvirtual && state == ETH_DOWN_STATE) { /* Solaris leave preplumbed option */
+       strncpy(todo.lifr_name, ifs[i].ifname, IFNAMSIZ);
        if(ioctl(_if_sock6, SIOCGLIFFLAGS, &todo) < 0) {
          return -1;
        } else {
@@@ -370,15 -370,16 +367,19 @@@
          }
        }
      } else {
++#endif
+       strncpy(todo.lifr_name, areq->ifname, IFNAMSIZ);
        if(ioctl(_if_sock6, SIOCLIFREMOVEIF, &todo) < 0) {
          return -1;
        }
++#if 0
      }
++#endif
      return 0;
    }
  
++  if (ifs[i].family == AF_INET) {
  #ifdef SIOCLIFREMOVEIF
--  if(isvirtual) {
      struct lifreq todo;
  
      memset(&todo, 0, sizeof(todo));
@@@ -386,24 -387,24 +387,25 @@@
      ((struct sockaddr_in *)&todo.lifr_addr)->sin_family = AF_INET;
      memcpy(&((struct sockaddr_in *)&todo.lifr_addr)->sin_addr, &areq->ipaddr,
  	   sizeof(struct in_addr));
--    if(state == ETH_DOWN_STATE) { /* Solaris leave preplumbed option */
++    if(isvirtual && state == ETH_DOWN_STATE) { /* Solaris leave preplumbed option */
        if(ioctl(_if_sock, SIOCGLIFFLAGS, &todo) < 0) {
++        _if_error = _if_error_alias_down_failed;
          return -1;
        } else {
          todo.lifr_flags &= ~IFF_UP;
          if(ioctl(_if_sock, SIOCSLIFFLAGS, &todo) < 0) {
++          _if_error = _if_error_alias_down_failed;
            return -1;
          }
        }
      } else {
        if(ioctl(_if_sock, SIOCLIFREMOVEIF, &todo) < 0) {
++        _if_error = _if_error_alias_down_failed;
          return -1;
        }
      }
      return 0;
--  } else
--#endif
--  {
++#else
    /* Normal non-LIF code */
      struct ifreq todo;
  
@@@ -429,8 -430,8 +431,10 @@@
      if(!isvirtual) {
  	/* FIXME: unplumb here */
      }
++    return 0;
++#endif
    }
--  return 0;
++  return -1;
  }
  
  int
